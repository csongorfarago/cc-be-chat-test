{"version":3,"sources":["index.js"],"names":["inquirer","require","WebSocket","ws","on","open","console","log","incoming","message","code","substring","data","JSON","parse","forEach","run","formatSeconds","name","askName","send","answers","askChat","split","replace","questions","type","prompt","s","stringify","seconds","sec_num","parseInt","day","Math","floor","hours","minutes"],"mappings":"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","sourceRoot":"C:\\work\\chat-test","sourcesContent":["const inquirer = require('inquirer');\r\nconst WebSocket = require('ws');  \r\nconst ws = new WebSocket('ws://localhost:8080'); \r\n\r\nws.on('open', function open() {\r\n    console.log('server is connected');\r\n});\r\n\r\nws.on('message', function incoming(message) {\r\n    var code =  message.substring(0, 2);\r\n    var data =  JSON.parse(message.substring(2));\r\n    \r\n    //Code 02 - chat message\r\n    if(code == \"02\"){\r\n        console.log('[%s]: %s', data[\"name\"], data[\"message\"]);    \r\n    }  \r\n    \r\n    //Code 03 - receiving chat history\r\n    if(code == \"03\"){\r\n        data.forEach(function (message){\r\n            console.log('[%s]: %s', message[\"name\"], message[\"message\"]); \r\n        });  \r\n        \r\n        //History recieved asking for client's name\r\n        run();  \r\n    }  \r\n    \r\n    //Code 04 - receiving answer for /popular\r\n    if(code == \"04\"){\r\n        console.log(data['word']);\r\n    }\r\n \r\n    //Code 05 - receiving answer for /stats\r\n    if(code == \"05\"){\r\n        console.log(formatSeconds(data['time']));\r\n    } \r\n    \r\n});\r\n\r\nws.on('close', function incoming(data) {\r\n  console.log('server is disconnected');\r\n});\r\n\r\n\r\n\r\nconst run = async () => {\r\n  const { name } = await askName();\r\n  \r\n    var data = {};\r\n    data['name'] = name; \r\n    send(\"01\", data);\r\n\r\n  while (true) {\r\n    const answers = await askChat();\r\n    const { message } = answers;\r\n  \r\n    if(message[0] == \"/\") {\r\n        switch(message.split(\" \")[0]){\r\n            case \"/popular\":\r\n                send(\"03\", \"\");\r\n                break;\r\n            case \"/stats\":\r\n                var data = {};\r\n                data['name'] = message.replace(\"/stats \",\"\");   \r\n                send(\"04\", data);\r\n                break;\r\n            default:\r\n                console.log(\"Not supported commad\");\r\n        }\r\n    }else{\r\n        var data = {};\r\n        data['message'] = message; \r\n        send(\"02\", data);    \r\n    }    \r\n  }\r\n};\r\n\r\nconst askChat = () => {\r\n  const questions = [\r\n    {\r\n      name: \"message\",\r\n      type: \"input\",\r\n      message: \"Enter chat message:\"\r\n    }\r\n  ];\r\n  return inquirer.prompt(questions);\r\n};\r\n\r\nconst askName = () => {\r\n  const questions = [\r\n    {\r\n      name: \"name\",\r\n      type: \"input\",\r\n      message: \"Enter your name:\"\r\n    }\r\n  ];\r\n  return inquirer.prompt(questions);\r\n};\r\n\r\n//helpre functions\r\nfunction send(code, data){\r\n    var s = code;\r\n    s+= JSON.stringify(data);\r\n    ws.send(s);\r\n}\r\n\r\nfunction formatSeconds(seconds){\r\n    var sec_num = parseInt(seconds/1000);\r\n      \r\n    var day = Math.floor(sec_num / 86400);  \r\n    if(day < 10){ day = \"0\"+day; }\r\n    day += \"d\";\r\n    \r\n    var hours   = Math.floor(sec_num / 3600) % 24;\r\n    if(hours < 10){ hours = \"0\"+hours; }\r\n    hours += \"h\";\r\n    \r\n    var minutes = Math.floor(sec_num / 60) % 60;\r\n    if(minutes < 10){ minutes = \"0\"+minutes; }\r\n    minutes += \"m\";\r\n    \r\n    var seconds = sec_num % 60;\r\n    if(seconds < 10){ seconds = \"0\"+seconds; }    \r\n    seconds += \"s\";\r\n    \r\n    return day +\" \"+ hours +\" \"+ minutes +\" \"+ seconds;  \r\n}\r\n"]}