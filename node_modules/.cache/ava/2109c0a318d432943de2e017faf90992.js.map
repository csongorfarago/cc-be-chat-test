{"version":3,"sources":["server.test.js"],"names":["server","require","WebSocket","ws","on","open","console","log","t","readyState","pass","fail","setTimeout","afterTwoSeconds"],"mappings":";;AAAA;;;;;;AACA,MAAMA,SAASC,QAAQ,cAAR,CAAf;;AAEA,MAAMC,YAAYD,QAAQ,IAAR,CAAlB;AACA,MAAME,KAAK,IAAID,SAAJ,CAAc,qBAAd,CAAX;;AAEAC,GAAGC,EAAH,CAAM,MAAN,EAAc,SAASC,IAAT,GAAgB;AAC1BC,UAAQC,GAAR,CAAY,qBAAZ;;AAEF,qBAAK,YAAL,EAAmBC,KAAK;AACpB,QAAGL,GAAGM,UAAH,IAAiB,CAApB,EAAsB;AAACD,QAAEE,IAAF;AAAU,KAAjC,MACI;AAACF,QAAEG,IAAF;AAAU;AAClB,GAHD;AAMD,CATD;;AAYE,mBAAK,YAAL,EAAmB,MAAMH,CAAN,IAAW;AAC5BI,aAAW,SAASC,eAAT,GAA2B;AACpCP,YAAQC,GAAR,CAAY,GAAZ;AACD,GAFD,EAEG,IAFH;AAGD,CAJD","file":"server.test.js","sourcesContent":["import test from 'ava';\r\nconst server = require('../server.js');\r\n\r\nconst WebSocket = require('ws');  \r\nconst ws = new WebSocket('ws://localhost:8080'); \r\n\r\nws.on('open', function open() {\r\n    console.log('server is connected');\r\n\r\n  test('connection', t => {      \r\n      if(ws.readyState == 1){t.pass();}\r\n      else{t.fail();}\r\n  })\r\n\r\n\r\n});\r\n\r\n\r\n  test('connection', async t => {      \r\n    setTimeout(function afterTwoSeconds() {\r\n      console.log('2')\r\n    }, 2000)\r\n  })"]}