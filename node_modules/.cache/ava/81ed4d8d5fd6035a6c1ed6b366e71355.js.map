{"version":3,"sources":["server.js"],"names":["fs","require","BADWORDS","PROFANITY","CENZOR","readFile","err","contents","split","RegExp","join","console","log","WebSocket","PORT","server","Server","port","messages","clients","on","connection","socket","client","Date","now","id","send","JSON","stringify","incoming","message","code","substring","data","parse","text","profanity","length","shift","push","forEach","s","time","i","wordCounts","words","popular","w","toLowerCase","clientFound","answer","replace","m","substr"],"mappings":"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","sourceRoot":"C:\\work\\chat-test","sourcesContent":["//Getting PROFANITY regex ready for use\r\nconst fs = require('fs');\r\nvar BADWORDS = [];\r\nvar PROFANITY;\r\nvar CENZOR;\r\nfs.readFile(\"assets/badwords.txt\", \"utf8\", function(err, contents) {\r\n    BADWORDS = contents.split('\\r\\n');\r\n    PROFANITY  = new RegExp( BADWORDS.join(\"|\") ,\"gi\");\r\n    CENZOR = (\"**********************\").split(\"\").join(\"******\");\r\n    console.log('Profanity words list loaded and filter set up');\r\n});\r\n\r\n//Setting up Websocket\r\nconst WebSocket = require('ws');\r\nconst PORT = 8080; \r\nconst server = new WebSocket.Server({ port: PORT });\r\n \r\nvar messages = []; \r\nvar clients = {};\r\n \r\nserver.on('connection', function connection(socket) {\r\n  //Handle new connections\r\n  console.log(\"Client connected\");\r\n  \r\n    var client = {};\r\n    client['name'] = \"Unknown\";\r\n    client['join'] = Date.now();\r\n    clients[socket.id] = client;    \r\n    \r\n \r\n  //sending chat history\r\n  socket.send(\"03\"+JSON.stringify(messages));\r\n   \r\n   \r\n  //Handle messages from clients  \r\n  socket.on('message', function incoming(message) {\r\n    //decoding message\r\n    var code =  message.substring(0, 2);\r\n    var data =  JSON.parse(message.substring(2));\r\n    console.log('received:{ code: '+code+' , message: '+ JSON.stringify(data) +' }');\r\n \r\n    //Code 01 - client settings\r\n    if(code == \"01\"){\r\n        if(data['name']){\r\n            clients[socket.id]['name'] = data['name']; \r\n        }       \r\n    } \r\n    \r\n    //Code 02 - chat message\r\n    if(code == \"02\"){\r\n        var text = profanity(data['message']);\r\n        var message = { \"name\": clients[socket.id]['name'], \r\n                        \"message\": text, \r\n                        \"time\": Date.now()\r\n                        };          \r\n        \r\n        //keeping last 50 messages\r\n        if(messages.length >= 50){\r\n            messages.shift();   \r\n        }\r\n        messages.push(message); \r\n        \r\n        //sending message object to everyone\r\n        server.clients.forEach(function(client) {\r\n            client.send(\"02\"+JSON.stringify(message));\r\n        });      \r\n    }\r\n    \r\n    //Code 03 - /popular command \r\n    if(code == \"03\"){\r\n        var s = \"\";\r\n        var time = Date.now() - 5000;\r\n        for(var i = messages.length-1; i >= 0; i--){\r\n            if(messages[i]['time'] >= time){\r\n                s+= messages[i]['message'] + \" \";\r\n            }\r\n        }          \r\n        \r\n        var wordCounts = { };\r\n        var words = s.split(/\\b/);\r\n        \r\n        var popular = {};\r\n        popular['word'] = \"\"\r\n        popular['count'] = 0;\r\n        \r\n        for(var i = 0; i < words.length; i++){\r\n            var w = words[i].toLowerCase();\r\n            wordCounts[\"_\" + w] = (wordCounts[\"_\" + w] || 0) + 1;\r\n            if(wordCounts[\"_\" + w] > popular['count'] && w != \" \"){\r\n                popular['word'] = w;\r\n                popular['count'] = wordCounts[\"_\" + w];                \r\n            }\r\n        }\r\n\r\n        socket.send(\"04\"+JSON.stringify(popular));        \r\n    } \r\n\r\n    //Code 04 - /stats command \r\n    if(code == \"04\"){\r\n        //look for client\r\n        var clientFound;\r\n        for(var id in clients){\r\n            if(clients[id]['name'] == data['name']){\r\n                clientFound = clients[id];    \r\n            }\r\n        }\r\n        \r\n        if(clientFound){\r\n            //client found    \r\n            var answer = {};\r\n            answer['name'] = clientFound['name'];\r\n            answer['time'] = Date.now() - clientFound['join'];\r\n            socket.send(\"05\"+JSON.stringify(answer));               \r\n        }else{\r\n            //client not found\r\n            var answer = {};\r\n            answer['error'] = \"client not found\";\r\n            socket.send(\"05\"+JSON.stringify(answer));               \r\n        }           \r\n    } \r\n        \r\n  });\r\n\r\n  //Handle disconncetions from clients  \r\n  socket.on('close', function incoming(message) {\r\n    console.log('Client disconnected with code: %s', message);\r\n  });\r\n\r\n});\r\n\r\n//Server is fully set up\r\nconsole.log(\"Chat server is running at localhost:\"+PORT);\r\n\r\n\r\n//Helper functions\r\nfunction profanity(message){\r\n    return message.replace(PROFANITY, function(m) { \r\n        return CENZOR.substr(0, m.length);\r\n    });\r\n}"]}