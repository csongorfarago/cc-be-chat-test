{"version":3,"sources":["server.test.js"],"names":["server","require","WebSocket","test","cb","t","ws1","on","open","pass","handleError","error","fail","reason","end","ws2","send","incoming","message","substring","is","ws3","console","log"],"mappings":";;AAAA;;;;;;AACA,MAAMA,SAASC,QAAQ,cAAR,CAAf;;AAEA,MAAMC,YAAYD,QAAQ,IAAR,CAAlB;;AAEAE,cAAKC,EAAL,CAAQ,YAAR,EAAsBC,KAAK;AACvB,QAAIC,MAAM,IAAIJ,SAAJ,CAAc,qBAAd,CAAV;AACAI,QAAIC,EAAJ,CAAO,MAAP,EAAe,SAASC,IAAT,GAAgB;AAC3BH,UAAEI,IAAF;AACH,KAFD;AAGAH,QAAIC,EAAJ,CAAO,OAAP,EAAgB,SAASG,WAAT,CAAqBC,KAArB,EAA4B;AACxCN,UAAEO,IAAF,CAAOD,KAAP;AACH,KAFD;AAGAL,QAAIC,EAAJ,CAAO,OAAP,EAAgB,SAASG,WAAT,CAAqBG,MAArB,EAA6B;AACzCR,UAAES,GAAF;AACH,KAFD;AAGH,CAXD;;AAaAX,cAAKC,EAAL,CAAQ,cAAR,EAAwBC,KAAK;AACzB,QAAIU,MAAM,IAAIb,SAAJ,CAAc,qBAAd,CAAV;AACAa,QAAIR,EAAJ,CAAO,MAAP,EAAe,SAASC,IAAT,GAAgB;AAC3BO,YAAIC,IAAJ,CAAS,0BAAT;AACH,KAFD;AAGAD,QAAIR,EAAJ,CAAO,SAAP,EAAkB,SAASU,QAAT,CAAkBC,OAAlB,EAA2B;AACzC,YAAGA,QAAQC,SAAR,CAAkB,CAAlB,EAAoB,CAApB,KAA0B,IAA7B,EAAkC;AAC9Bd,cAAEe,EAAF,CAAKF,QAAQC,SAAR,CAAkB,CAAlB,EAAoB,EAApB,CAAL,EAA8B,0BAA9B;AACAd,cAAES,GAAF;AACH;AACJ,KALD;AAMH,CAXD;;AAaAX,cAAKC,EAAL,CAAQ,iBAAR,EAA2BC,KAAK;AAC5B,QAAIgB,MAAM,IAAInB,SAAJ,CAAc,qBAAd,CAAV;AACAmB,QAAId,EAAJ,CAAO,MAAP,EAAe,SAASC,IAAT,GAAgB;AAC3Ba,YAAIL,IAAJ,CAAS,0BAAT;AACAK,YAAIL,IAAJ,CAAS,gCAAT;AACH,KAHD;AAIAK,QAAId,EAAJ,CAAO,SAAP,EAAkB,SAASU,QAAT,CAAkBC,OAAlB,EAA2B;AACrCI,gBAAQC,GAAR,CAAYL,OAAZ;AACP,KAFD;AAGH,CATD","file":"server.test.js","sourcesContent":["import test from 'ava';\r\nconst server = require('../server.js');\r\n\r\nconst WebSocket = require('ws');  \r\n\r\ntest.cb('connection', t => {      \r\n    var ws1 = new WebSocket('ws://localhost:8080');\r\n    ws1.on('open', function open() {\r\n        t.pass();\r\n    });  \r\n    ws1.on('error', function handleError(error) {\r\n        t.fail(error);\r\n    });      \r\n    ws1.on('close', function handleError(reason) {\r\n        t.end();\r\n    });       \r\n})\r\n\r\ntest.cb('Setting Name', t => {      \r\n    var ws2 = new WebSocket('ws://localhost:8080');\r\n    ws2.on('open', function open() {\r\n        ws2.send('01{\"name\":\"testName123\"}');\r\n    });  \r\n    ws2.on('message', function incoming(message) {\r\n        if(message.substring(0,2) == \"01\"){\r\n            t.is(message.substring(0,24), '01{\"name\":\"testName123\",');\r\n            t.end();\r\n        }\r\n    });                 \r\n})\r\n\r\ntest.cb('Sending message', t => {      \r\n    var ws3 = new WebSocket('ws://localhost:8080');\r\n    ws3.on('open', function open() {\r\n        ws3.send('01{\"name\":\"testName123\"}');\r\n        ws3.send('02{\"message\":\"testMessage123\"}');\r\n    });  \r\n    ws3.on('message', function incoming(message) {\r\n            console.log(message);\r\n    });                 \r\n})"]}